// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace FileProcessor.IntegrationTests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Xunit.TraitAttribute("Category", "base")]
    [Xunit.TraitAttribute("Category", "shared")]
    [Xunit.TraitAttribute("Category", "processvouchercsv")]
    public partial class ProcessVoucherCSVFilesFeature : object, Xunit.IClassFixture<ProcessVoucherCSVFilesFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = new string[] {
                "base",
                "shared",
                "processvouchercsv"};
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "ProcessVoucherCSV.feature"
#line hidden
        
        public ProcessVoucherCSVFilesFeature(ProcessVoucherCSVFilesFeature.FixtureData fixtureData, FileProcessor_IntegrationTests_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "Process Voucher CSV Files", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public void TestInitialize()
        {
        }
        
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "DisplayName",
                        "Description"});
            table57.AddRow(new string[] {
                        "estateManagement",
                        "Estate Managememt REST Scope",
                        "A scope for Estate Managememt REST"});
            table57.AddRow(new string[] {
                        "transactionProcessor",
                        "Transaction Processor REST  Scope",
                        "A scope for Transaction Processor REST"});
            table57.AddRow(new string[] {
                        "voucherManagement",
                        "Voucher Management REST  Scope",
                        "A scope for Voucher Management REST"});
            table57.AddRow(new string[] {
                        "fileProcessor",
                        "File Processor REST Scope",
                        "A scope for File Processor REST"});
#line 5
 testRunner.Given("I create the following api scopes", ((string)(null)), table57, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResourceName",
                        "DisplayName",
                        "Secret",
                        "Scopes",
                        "UserClaims"});
            table58.AddRow(new string[] {
                        "estateManagement",
                        "Estate Managememt REST",
                        "Secret1",
                        "estateManagement",
                        "MerchantId, EstateId, role"});
            table58.AddRow(new string[] {
                        "transactionProcessor",
                        "Transaction Processor REST",
                        "Secret1",
                        "transactionProcessor",
                        ""});
            table58.AddRow(new string[] {
                        "voucherManagement",
                        "Voucher Management REST",
                        "Secret1",
                        "voucherManagement",
                        ""});
            table58.AddRow(new string[] {
                        "fileProcessor",
                        "File Processor REST",
                        "Secret1",
                        "fileProcessor",
                        ""});
#line 12
 testRunner.Given("the following api resources exist", ((string)(null)), table58, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClientId",
                        "ClientName",
                        "Secret",
                        "AllowedScopes",
                        "AllowedGrantTypes"});
            table59.AddRow(new string[] {
                        "serviceClient",
                        "Service Client",
                        "Secret1",
                        "estateManagement,transactionProcessor,voucherManagement,fileProcessor",
                        "client_credentials"});
#line 19
 testRunner.Given("the following clients exist", ((string)(null)), table59, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClientId"});
            table60.AddRow(new string[] {
                        "serviceClient"});
#line 23
 testRunner.Given("I have a token to access the estate management and transaction processor resource" +
                    "s", ((string)(null)), table60, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "EstateName"});
            table61.AddRow(new string[] {
                        "Test Estate 1"});
#line 27
 testRunner.Given("I have created the following estates", ((string)(null)), table61, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "EstateName",
                        "OperatorName",
                        "RequireCustomMerchantNumber",
                        "RequireCustomTerminalNumber"});
            table62.AddRow(new string[] {
                        "Test Estate 1",
                        "Safaricom",
                        "True",
                        "True"});
            table62.AddRow(new string[] {
                        "Test Estate 1",
                        "Voucher",
                        "True",
                        "True"});
#line 31
 testRunner.Given("I have created the following operators", ((string)(null)), table62, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "EstateName",
                        "OperatorName",
                        "ContractDescription"});
            table63.AddRow(new string[] {
                        "Test Estate 1",
                        "Safaricom",
                        "Safaricom Contract"});
            table63.AddRow(new string[] {
                        "Test Estate 1",
                        "Voucher",
                        "Hospital 1 Contract"});
#line 36
 testRunner.Given("I create a contract with the following values", ((string)(null)), table63, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "EstateName",
                        "OperatorName",
                        "ContractDescription",
                        "ProductName",
                        "DisplayText",
                        "Value"});
            table64.AddRow(new string[] {
                        "Test Estate 1",
                        "Safaricom",
                        "Safaricom Contract",
                        "Variable Topup",
                        "Custom",
                        ""});
            table64.AddRow(new string[] {
                        "Test Estate 1",
                        "Voucher",
                        "Hospital 1 Contract",
                        "Variable Voucher",
                        "Custom",
                        ""});
#line 41
 testRunner.When("I create the following Products", ((string)(null)), table64, "When ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "EstateName",
                        "OperatorName",
                        "ContractDescription",
                        "ProductName",
                        "CalculationType",
                        "FeeDescription",
                        "Value"});
            table65.AddRow(new string[] {
                        "Test Estate 1",
                        "Safaricom",
                        "Safaricom Contract",
                        "Variable Topup",
                        "Fixed",
                        "Merchant Commission",
                        "2.50"});
            table65.AddRow(new string[] {
                        "Test Estate 1",
                        "Voucher",
                        "Hospital 1 Contract",
                        "Variable Voucher",
                        "Fixed",
                        "Merchant Commission",
                        "2.50"});
#line 46
 testRunner.When("I add the following Transaction Fees", ((string)(null)), table65, "When ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "MerchantName",
                        "AddressLine1",
                        "Town",
                        "Region",
                        "Country",
                        "ContactName",
                        "EmailAddress",
                        "EstateName"});
            table66.AddRow(new string[] {
                        "Test Merchant 1",
                        "Address Line 1",
                        "TestTown",
                        "Test Region",
                        "United Kingdom",
                        "Test Contact 1",
                        "testcontact1@merchant1.co.uk",
                        "Test Estate 1"});
#line 51
 testRunner.Given("I create the following merchants", ((string)(null)), table66, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperatorName",
                        "MerchantName",
                        "MerchantNumber",
                        "TerminalNumber",
                        "EstateName"});
            table67.AddRow(new string[] {
                        "Safaricom",
                        "Test Merchant 1",
                        "00000001",
                        "10000001",
                        "Test Estate 1"});
            table67.AddRow(new string[] {
                        "Voucher",
                        "Test Merchant 1",
                        "00000001",
                        "10000001",
                        "Test Estate 1"});
#line 55
 testRunner.Given("I have assigned the following  operator to the merchants", ((string)(null)), table67, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "DeviceIdentifier",
                        "MerchantName",
                        "EstateName"});
            table68.AddRow(new string[] {
                        "123456780",
                        "Test Merchant 1",
                        "Test Estate 1"});
#line 60
 testRunner.Given("I have assigned the following devices to the merchants", ((string)(null)), table68, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "Reference",
                        "Amount",
                        "DateTime",
                        "MerchantName",
                        "EstateName"});
            table69.AddRow(new string[] {
                        "Deposit1",
                        "300.00",
                        "Today",
                        "Test Merchant 1",
                        "Test Estate 1"});
#line 64
 testRunner.Given("I make the following manual merchant deposits", ((string)(null)), table69, "Given ");
#line hidden
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Process Voucher File with 1 detail row for recipient email")]
        [Xunit.TraitAttribute("FeatureTitle", "Process Voucher CSV Files")]
        [Xunit.TraitAttribute("Description", "Process Voucher File with 1 detail row for recipient email")]
        public void ProcessVoucherFileWith1DetailRowForRecipientEmail()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Process Voucher File with 1 detail row for recipient email", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 68
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                            "Column1",
                            "Column2",
                            "Column3",
                            "Column4"});
                table70.AddRow(new string[] {
                            "H",
                            "20210508",
                            "",
                            ""});
                table70.AddRow(new string[] {
                            "D",
                            "Hospital 1",
                            "testrecipient1@recipient.com",
                            "10"});
                table70.AddRow(new string[] {
                            "T",
                            "1",
                            "",
                            ""});
#line 69
 testRunner.Given("I have a file named \'VoucherIssue.txt\' with the following contents", ((string)(null)), table70, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                            "EstateName",
                            "MerchantName",
                            "FileProfileId",
                            "UserId"});
                table71.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "8806EDBC-3ED6-406B-9E5F-A9078356BE99",
                            "ABA59ABF-293D-4A6B-B81B-7007503C3476"});
#line 74
 testRunner.And("I upload this file for processing", ((string)(null)), table71, "And ");
#line hidden
#line 78
 testRunner.When("As merchant \"Test Merchant 1\" on Estate \"Test Estate 1\" I get my transactions 1 t" +
                        "ransaction should be returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Process Voucher File with 1 detail row for recipient mobile")]
        [Xunit.TraitAttribute("FeatureTitle", "Process Voucher CSV Files")]
        [Xunit.TraitAttribute("Description", "Process Voucher File with 1 detail row for recipient mobile")]
        public void ProcessVoucherFileWith1DetailRowForRecipientMobile()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Process Voucher File with 1 detail row for recipient mobile", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 80
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                            "Column1",
                            "Column2",
                            "Column3",
                            "Column4"});
                table72.AddRow(new string[] {
                            "H",
                            "20210508",
                            "",
                            ""});
                table72.AddRow(new string[] {
                            "D",
                            "Hospital 1",
                            "07777777775",
                            "10"});
                table72.AddRow(new string[] {
                            "T",
                            "1",
                            "",
                            ""});
#line 81
 testRunner.Given("I have a file named \'VoucherIssue.txt\' with the following contents", ((string)(null)), table72, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                            "EstateName",
                            "MerchantName",
                            "FileProfileId",
                            "UserId"});
                table73.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "8806EDBC-3ED6-406B-9E5F-A9078356BE99",
                            "ABA59ABF-293D-4A6B-B81B-7007503C3476"});
#line 86
 testRunner.And("I upload this file for processing", ((string)(null)), table73, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Process Voucher File with 2 detail rows")]
        [Xunit.TraitAttribute("FeatureTitle", "Process Voucher CSV Files")]
        [Xunit.TraitAttribute("Description", "Process Voucher File with 2 detail rows")]
        public void ProcessVoucherFileWith2DetailRows()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Process Voucher File with 2 detail rows", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 92
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                            "Column1",
                            "Column2",
                            "Column3",
                            "Column4"});
                table74.AddRow(new string[] {
                            "H",
                            "20210508",
                            "",
                            ""});
                table74.AddRow(new string[] {
                            "D",
                            "Hospital 1",
                            "07777777775",
                            "10"});
                table74.AddRow(new string[] {
                            "D",
                            "Hospital 1",
                            "testrecipient1@recipient.com",
                            "10"});
                table74.AddRow(new string[] {
                            "T",
                            "1",
                            "",
                            ""});
#line 93
 testRunner.Given("I have a file named \'VoucherIssue.txt\' with the following contents", ((string)(null)), table74, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                            "EstateName",
                            "MerchantName",
                            "FileProfileId",
                            "UserId"});
                table75.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "8806EDBC-3ED6-406B-9E5F-A9078356BE99",
                            "ABA59ABF-293D-4A6B-B81B-7007503C3476"});
#line 99
 testRunner.And("I upload this file for processing", ((string)(null)), table75, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Process 2 Voucher Files")]
        [Xunit.TraitAttribute("FeatureTitle", "Process Voucher CSV Files")]
        [Xunit.TraitAttribute("Description", "Process 2 Voucher Files")]
        public void Process2VoucherFiles()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Process 2 Voucher Files", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 105
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                            "Column1",
                            "Column2",
                            "Column3",
                            "Column4"});
                table76.AddRow(new string[] {
                            "H",
                            "20210508",
                            "",
                            ""});
                table76.AddRow(new string[] {
                            "D",
                            "Hospital 1",
                            "07777777775",
                            "10"});
                table76.AddRow(new string[] {
                            "D",
                            "Hospital 1",
                            "testrecipient1@recipient.com",
                            "10"});
                table76.AddRow(new string[] {
                            "T",
                            "1",
                            "",
                            ""});
#line 106
 testRunner.Given("I have a file named \'VoucherIssue1.txt\' with the following contents", ((string)(null)), table76, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                            "EstateName",
                            "MerchantName",
                            "FileProfileId",
                            "UserId"});
                table77.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "8806EDBC-3ED6-406B-9E5F-A9078356BE99",
                            "ABA59ABF-293D-4A6B-B81B-7007503C3476"});
#line 112
 testRunner.And("I upload this file for processing", ((string)(null)), table77, "And ");
#line hidden
                TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                            "Column1",
                            "Column2",
                            "Column3",
                            "Column4"});
                table78.AddRow(new string[] {
                            "H",
                            "20210508",
                            "",
                            ""});
                table78.AddRow(new string[] {
                            "D",
                            "Hospital 1",
                            "07777777775",
                            "20"});
                table78.AddRow(new string[] {
                            "D",
                            "Hospital 1",
                            "testrecipient1@recipient.com",
                            "20"});
                table78.AddRow(new string[] {
                            "T",
                            "1",
                            "",
                            ""});
#line 116
 testRunner.Given("I have a file named \'VoucherIssue2.txt\' with the following contents", ((string)(null)), table78, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                            "EstateName",
                            "MerchantName",
                            "FileProfileId",
                            "UserId"});
                table79.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "8806EDBC-3ED6-406B-9E5F-A9078356BE99",
                            "ABA59ABF-293D-4A6B-B81B-7007503C3476"});
#line 122
 testRunner.And("I upload this file for processing", ((string)(null)), table79, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Process Duplicate Voucher Topup File with 1 detail row")]
        [Xunit.TraitAttribute("FeatureTitle", "Process Voucher CSV Files")]
        [Xunit.TraitAttribute("Description", "Process Duplicate Voucher Topup File with 1 detail row")]
        [Xunit.TraitAttribute("Category", "PRTest")]
        public void ProcessDuplicateVoucherTopupFileWith1DetailRow()
        {
            string[] tagsOfScenario = new string[] {
                    "PRTest"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Process Duplicate Voucher Topup File with 1 detail row", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 129
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                            "Column1",
                            "Column2",
                            "Column3",
                            "Column4"});
                table80.AddRow(new string[] {
                            "H",
                            "20210508",
                            "",
                            ""});
                table80.AddRow(new string[] {
                            "D",
                            "Hospital 1",
                            "07777777775",
                            "10"});
                table80.AddRow(new string[] {
                            "D",
                            "Hospital 1",
                            "testrecipient1@recipient.com",
                            "20"});
                table80.AddRow(new string[] {
                            "T",
                            "1",
                            "",
                            ""});
#line 130
 testRunner.Given("I have a file named \'VoucherIssue1.txt\' with the following contents", ((string)(null)), table80, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                            "EstateName",
                            "MerchantName",
                            "FileProfileId",
                            "UserId"});
                table81.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "8806EDBC-3ED6-406B-9E5F-A9078356BE99",
                            "ABA59ABF-293D-4A6B-B81B-7007503C3476"});
#line 136
 testRunner.And("I upload this file for processing", ((string)(null)), table81, "And ");
#line hidden
#line 140
 testRunner.When("As merchant \"Test Merchant 1\" on Estate \"Test Estate 1\" I get my transactions 2 t" +
                        "ransaction should be returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                            "Column1",
                            "Column2",
                            "Column3",
                            "Column4"});
                table82.AddRow(new string[] {
                            "H",
                            "20210508",
                            "",
                            ""});
                table82.AddRow(new string[] {
                            "D",
                            "Hospital 1",
                            "07777777775",
                            "10"});
                table82.AddRow(new string[] {
                            "D",
                            "Hospital 1",
                            "testrecipient1@recipient.com",
                            "20"});
                table82.AddRow(new string[] {
                            "T",
                            "1",
                            "",
                            ""});
#line 142
 testRunner.Given("I have a file named \'VoucherIssue2.txt\' with the following contents", ((string)(null)), table82, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                            "EstateName",
                            "MerchantName",
                            "FileProfileId",
                            "UserId"});
                table83.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "8806EDBC-3ED6-406B-9E5F-A9078356BE99",
                            "ABA59ABF-293D-4A6B-B81B-7007503C3476"});
#line 149
 testRunner.And("I upload this file for processing an error should be returned indicating the file" +
                        " is a duplicate", ((string)(null)), table83, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                ProcessVoucherCSVFilesFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                ProcessVoucherCSVFilesFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
